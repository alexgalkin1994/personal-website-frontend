{"remainingRequest":"/Users/alexgalkin/Documents/strapi-starter-gridsome-portfolio/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexgalkin/Documents/strapi-starter-gridsome-portfolio/frontend/src/pages/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alexgalkin/Documents/strapi-starter-gridsome-portfolio/frontend/src/pages/Index.vue","mtime":1605363220981},{"path":"/Users/alexgalkin/Documents/strapi-starter-gridsome-portfolio/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alexgalkin/Documents/strapi-starter-gridsome-portfolio/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alexgalkin/Documents/strapi-starter-gridsome-portfolio/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alexgalkin/Documents/strapi-starter-gridsome-portfolio/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ProjectCard from \"~/components/ProjectCard\";\nimport RichText from \"~/components/RichText\";\nimport { getStrapiMedia } from \"~/utils/medias\";\nimport { getMetaTags } from \"~/utils/seo\";\n\nexport default {\n  methods: {\n    getStrapiMedia,\n  },\n  components: {\n    ProjectCard,\n    RichText,\n  },\n  metaInfo() {\n    const { title, description, shareImage } = this.$page.strapi.home.seo;\n    const image = getStrapiMedia(shareImage.url);\n    return {\n      title,\n      meta: getMetaTags(title, description, image),\n    };\n  },\n};\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <Layout>\n    <div class=\"container\">\n      <!-- <h1 class=\"text-4xl font-semibold mt-16\">{{ $page.strapi.home.title }}</h1> -->\n      <div class=\"title\">\n        <span class=\"text write\" data-splitting=\"lines\">\n          RETRO<br />\n          LASER<br />\n          WRITE\n        </span>\n        <span aria-hidden=\"true\" class=\"text laser\" data-splitting=\"lines\">\n          RETRO<br />\n          LASER<br />\n          WRITE\n        </span>\n      </div>\n      <div class=\"mt-2 w-full md:w-9/12\">\n        <RichText :data=\"{ content: $page.strapi.home.bio }\" />\n      </div>\n      <h2\n        class=\"text-2xl uppercase text-gray-600 mb-6 mt-16 tracking-wide font-semibold\"\n      >\n        My latest projects\n      </h2>\n    </div>\n    <!-- List of project preview cards -->\n    <div class=\"flex flex-col gap-12\">\n      <ProjectCard\n        v-for=\"project in $page.strapi.projects\"\n        :key=\"project.id\"\n        :project=\"project\"\n      />\n    </div>\n  </Layout>\n</template>\n\n<page-query>\nquery {\n  strapi {\n    # Get homepage data\n    home {\n      title\n      bio\n      # Metadata for SEO\n      seo {\n        title\n        description\n        shareImage {\n          id\n          url\n        }\n      }\n    }\n    # List projects\n    projects(sort: \"date:desc\") {\n      title\n      slug\n      description\n      categories {\n        id\n        title\n      }\n      coverImage {\n        id\n        url\n      }\n    }\n  }\n}\n</page-query>\n\n<script>\nimport ProjectCard from \"~/components/ProjectCard\";\nimport RichText from \"~/components/RichText\";\nimport { getStrapiMedia } from \"~/utils/medias\";\nimport { getMetaTags } from \"~/utils/seo\";\n\nexport default {\n  methods: {\n    getStrapiMedia,\n  },\n  components: {\n    ProjectCard,\n    RichText,\n  },\n  metaInfo() {\n    const { title, description, shareImage } = this.$page.strapi.home.seo;\n    const image = getStrapiMedia(shareImage.url);\n    return {\n      title,\n      meta: getMetaTags(title, description, image),\n    };\n  },\n};\n</script>\n\n<style>\nimg {\n  width: 100%;\n  height: auto;\n}\n\n.title {\n  position: relative;\n  text-align: center;\n  transform: translateZ(0);\n  transform-style: preserve-3d;\n}\n\n.title .text {\n  font-family: sans-serif;\n  font-weight: 400;\n  font-size: calc(20vw / var(--word-total) );\n  line-height: 1.0;\n}\n\n.title .write .word {\n  color: hsl(0, 0%, 80%);\n  text-shadow: 0 0 0.1em currentColor;\n  transform-style: preserve-3d;\n  animation: write linear both;\n}\n\n.title .laser {\n  position: absolute;\n  top: 0;\n  left: 0;\n  /* To avoid the blur getting masked by the clip-path we had to duplicate the element */\n  filter: blur(4px) contrast(10);\n  pointer-events: none;\n}\n\n.title .laser .word {\n  display: inline-block;\n}\n\n.title .laser .word {\n  color: hsl(0, 100%, 75%);\n  text-shadow: 0 0 0.1em currentColor;\n  transform: translateZ(5px);\n  animation: laser linear both;\n}\n\n.title .write .word,\n.title .laser .word {\n  animation-duration: 4s;\n  animation-delay: calc(0.3s + var(--word-index) * 160ms);\n  animation-iteration-count: infinite;\n}\n\n.title:hover .word {\n  animation-play-state: paused;\n}\n\n/* .title .text .word,\n.title .text .word::before {\n  animation-play-state: paused;\n  animation-delay: -0.4s;\n} */\n\n@keyframes write {\n  from, 30% { clip-path: polygon(-20% 0%, -15% 0%, -15% 100%, -20% 100%) }\n  70%, to { clip-path: polygon(-15% 0%, 120% 0%, 120% 100%, -15% 100%) }\n}\n\n@keyframes laser {\n  from, 30% { clip-path: polygon(-20% 0%, -15% 0%, -15% 100%, -20% 100%) }\n  70%, to { clip-path: polygon(115% 0%, 120% 0%, 120% 100%, 115% 100%) }\n}\n\n\n</style>\n"]}]}